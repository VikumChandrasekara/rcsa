@model List<rcsa.Models.AssessmentAnswer>
@{

    Layout = "~/Views/Shared/_aLayout.cshtml";
    string userRole = @ViewBag.BranchName; // Replace with dynamic user role if needed
}
<div class="container mt-4">
   
    <div class="table-responsive mt-3">
      
     
              
               <div class="table-responsive mt-3">
                <div class="form-container">
                    <form action="/Assessment/OldBranchOwnreview" method="get">
                        <label for="ServiceCenterId">Select Service Center:</label>
                        <select class="form-control" id="ServiceCenterId" name="ServiceCenterId">
                            <option value="">Select Service Center</option>
                            @foreach (var serviceCenter in ViewBag.ServiceCenters)
                            {
                                <option value="@serviceCenter.ServiceCenterId">
                                    @serviceCenter.BranchName
                                </option>
                            }
                        </select>

                        <select id="dateRangeDropdown" name="fromdate">
                            <option value="">Select a Date</option>
                            @foreach (var date in ViewBag.fromdate)
                            {
                                <option value="@date">@date.ToString("yyyy-MM-dd")</option>
                            }
                        </select>

                        <button type="submit">Search</button>
                    </form>
                </div>

             

                <h5>Service Center ID: @Model.FirstOrDefault()?.ServiceCenterId</h5>
                <h5>Service Center: @ViewBag.BranchNameForServiceCenter</h5>
                <h5>From Date: @Model.FirstOrDefault()?.fromdate.ToString("yyyy-MM-dd") To Date: @Model.FirstOrDefault()?.todate.ToString("yyyy-MM-dd")</h5>

                        <table id="exportTable" class="table table-striped">
                            <thead class="table-light">
                                <tr>
                                    <th>No.</th>
                                    <th>Question</th>
                                    <th>Marks</th>

                                    <th>Service Center Resposed</th>
                                    <th>Branch  Resposed</th>


                                </tr>
                            </thead>

                            <tbody>
                                @{
                                    int index = 0;
                                    int mainHeadingIndex = 1;
                        double totalScore = 0;
                        double brtotalScore = 0;
                                }

                                @foreach (var mainHeadingGroup in Model.GroupBy(q => q.headingTitel))
                                {
                                    <!-- Main Heading -->
                                    <tr class="table-success">
                                        <td colspan="5"><strong>@mainHeadingIndex. @mainHeadingGroup.Key</strong></td>
                                    </tr>

                                    int subHeadingIndex = 1;

                                    @foreach (var subHeadingGroup in mainHeadingGroup.GroupBy(q => q.subheadingTitel))
                                    {
                                        <!-- Sub Heading -->
                                        <tr class="table-info">
                                            <td colspan="5"><strong>@mainHeadingIndex.@subHeadingIndex @subHeadingGroup.Key</strong></td>
                                        </tr>

                                        int questionIndex = 1;

                                        @foreach (var question in subHeadingGroup)
                                        {
                                        totalScore = question.TotalScore;
                                        brtotalScore = question.BrRTotalScore;


                                            <tr data-service-center-id="@question.ServiceCenterId">
                                                <td>@mainHeadingIndex.@subHeadingIndex.@questionIndex</td>



                                                <td>
                                                    @question.AnswerText
                                                    <input type="hidden" name="[@index].QuestionId" value="@question.QuestionId" />
                                                    <input type="hidden" name="[@index].QuestionText" value="@question.AnswerText" />
                                                    <input type="hidden" name="[@index].Marks" value="@question.Marks" />
                                                    <input type="hidden" name="[@index].MainHeading" value="@question.MainHeading" />
                                                    <input type="hidden" name="[@index].SubHeading" value="@question.SubHeading" />
                                                    <input type="hidden" name="[@index].ServiceCenterId" value="@question.ServiceCenterId" />
                                                    <input type="hidden" name="[@index].TotalScore" value="@question.TotalScore" />
                                                    <input type="hidden" name="[@index].BrRTotalScore" value="@question.BrRTotalScore" />
                                                </td>
                                                <td>@question.Marks</td>

                                                <td>
                                                    <div class="col-md-2">
                                                        @{
                                                            string displayAnswer = question.ServiceCenterAnswer == "Yes" ? "Yes" :
                                                            question.ServiceCenterAnswer == "NO" ? "No" :
                                                            question.ServiceCenterAnswer == "NA" ? "N/A" : "";
                                                        }

                                                        <span class="answer-label @(question.ServiceCenterAnswer == "NO" || question.ServiceCenterAnswer == "NA" ? "clickable" : "")"
                                                              data-comment="@question.Scomment"
                                                              onclick="showComment(this)">
                                                            @displayAnswer
                                                        </span>

                                                        <input type="hidden" name="[@index].ServiceCenterAnswer" value="@question.ServiceCenterAnswer" />
                                                        <input type="hidden" name="[@index].Scomment" value="@question.Scomment" />
                                                    </div>
                                                </td>


                                                <td>
                                                    <div class="col-md-2">
                                                        @{
                                                            string displayAnswerB = question.BranchAnswer == "Yes" ? "Yes" :
                                                            question.BranchAnswer == "NO" ? "No" :
                                                            question.BranchAnswer == "NA" ? "N/A" : "";
                                                        }

                                                        <span class="answer-label @(question.BranchAnswer == "NO" || question.BranchAnswer == "NA" ? "clickable" : "")"
                                                              data-comment="@question.Bcomment"
                                                              onclick="showComment(this)">
                                                            @displayAnswerB
                                                        </span>

                                                        <input type="hidden" name="[@index].BranchAnswer" value="@question.BranchAnswer" />
                                                        <input type="hidden" name="[@index].Bcomment" value="@question.Bcomment" />
                                                    </div>
                                                </td>


                                            </tr>

                                            index++;
                                            questionIndex++;
                                        }

                                        subHeadingIndex++;
                                    }

                                    mainHeadingIndex++;
                                }
                            </tbody>

                            <!-- Total Score Row at the End -->
                        <tfoot>
                            <tr class="table-warning">
                                <td colspan="4" class="text-end"><strong>Service Center Total Score:</strong></td>
                                <td><strong>@totalScore</strong></td>


                            </tr>
                            <tr class="table-warning">
                                <td colspan="4" class="text-end"><strong>Branch Review Total Score:</strong></td>
                                <td><strong>@brtotalScore</strong></td>


                            </tr>
                        </tfoot>
                        </table>

                    </div>


            </div>
        </div>
   
    <style>
        .answer-label {
            font-weight: bold;
            color: #333;
            cursor: pointer;
        }

        .clickable {
            color: red;
            text-decoration: underline;
        }
    </style>
    <script>
        function checkBranchAnswer(radio) {
            let selectedValue = radio.value;
            let index = radio.name.match(/\d+/)[0]; // Extract the index from the name attribute
            let commentBox = document.getElementById("comment-" + index);

            if (selectedValue === "No" || selectedValue === "N/A") {
                let existingComment = commentBox.value.trim(); // Get existing comment

                let userComment = prompt("Please enter a comment for this answer:", existingComment); // Pre-fill with existing comment
                if (userComment !== null) {
                    commentBox.value = userComment; // Update the textarea with the new comment
                }
            }
        }
        function showComment(element) {
            let answer = element.innerText.trim(); // Get the displayed answer (Yes, No, NA)
            let comment = element.getAttribute("data-comment");

            if ((answer === "NO" || answer === "N/A") && comment) {
                alert("Comment: " + comment);
            }
        }
        $(document).ready(function () {
            $("#searchForm").submit(function (event) {
                event.preventDefault();

                var serviceCenterId = $("#ServiceCenterId").val(); 
                var fromdate = $("#fromdate").val();

                $.ajax({
                    url: "/Assessment/OldBranchOwnreview",
                    type: "GET",
                    data: { ServiceCenterId: serviceCenterId },
                    success: function (response) {
                        $("#resultTable").html(response);
                    },
                    error: function () {
                        $("#resultTable").html("<p style='color: red;'>Error loading data.</p>");
                    }
                });
            });
        });


    </script>

    <style>/* Container for Form */
/* Form Container Styling */
.form-container {
    background: #f8f9fa; /* Light grey background */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow */
    max-width: 500px; /* Adjust width as needed */
    margin: 20px 0; /* Moves it to the left */
}

/* Form Layout */
.form-container form {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 15px;
}

/* Dropdown Row */
.form-container .form-group {
    display: flex;
    gap: 10px;
    flex: 1;
}

/* Label Styling */
.form-container label {
    font-size: 16px;
    font-weight: bold;
    color: #333;
    margin-right: 10px;
}

/* Dropdown Styling */
.form-container select {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 14px;
    background: #fff;
    color: #495057;
    transition: border-color 0.3s ease-in-out;
}

.form-container select:focus {
    border-color: #007bff;
    outline: none;
    box-shadow: 0px 0px 5px rgba(0, 123, 255, 0.5);
}

/* Button Styling */
.form-container button {
    padding: 10px 20px;
    background: #007bff; /* Blue button */
    color: white;
    font-size: 16px;
    font-weight: bold;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
}

.form-container button:hover {
    background: #0056b3; /* Darker blue on hover */
}




</style>
