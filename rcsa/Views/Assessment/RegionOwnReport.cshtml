@model List<rcsa.Models.AssessmentAnswer>
@{

    Layout = "~/Views/Shared/_aLayout.cshtml";
    string userRole = @ViewBag.BranchName; // Replace with dynamic user role if needed
}
<div class="container mt-4">

    <div class="table-responsive mt-3">
     
            <div class="row mt-4">
                
                    <div class="table-responsive mt-3">
                <form action="/Assessment/RegionOwnReport" method="get" class="form-container">
                            <label for="ServiceCenterId">Select Service Center:</label>
                            <select class="form-control" id="ServiceCenterId" name="ServiceCenterId">

                                <option value="">Select Service Center</option>
                                @{

                                    @foreach (var serviceCenter in ViewBag.ServiceCenters)
                                    {
                                        <option value="@serviceCenter.ServiceCenterId">
                                            @serviceCenter.BranchName
                                        </option>
                                    }
                                }
                            </select>
                    <select id="dateRangeDropdown" name="fromdate">
                        <option value="">Select a Date</option>
                        @foreach (var date in ViewBag.fromdate)
                        {
                            <option value="@date">@date.ToString("yyyy-MM-dd")</option>
                        }
                    </select>
                            <button type="submit">Search</button>
                            </form>

                        <form>

                    <h5>Service Center ID: @Model.FirstOrDefault()?.ServiceCenterId</h5>
                    <h5>Service Center: @ViewBag.BranchNameForServiceCenter</h5>
                    <h5>From Date: @Model.FirstOrDefault()?.fromdate.ToString("yyyy-MM-dd") To Date: @Model.FirstOrDefault()?.todate.ToString("yyyy-MM-dd")</h5>

                            <div class="table-responsive mt-3">
                                <table id="exportTable" class="table table-striped">
                                    <thead class="table-light">
                                        <tr>
                                            <th>#</th>
                                            <th>Question</th>
                                            <th>Marks</th>
                                            <th>Service Responed</th>
                                            <th>Branch Responed</th>
                                            <th>Regon Responed </th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                @{
                                    int index = 0;
                                    int mainHeadingIndex = 1;
                                    double totalScore = 0;
                                    double brtotalScore = 0;
                                    double reRTotalScore = 0;
                                }

                                        @foreach (var mainHeadingGroup in Model.GroupBy(q => q.headingTitel))
                                        {
                                            <!-- Main Heading -->
                                            <tr class="table-success">
                                                <td colspan="6"><strong>@mainHeadingIndex. @mainHeadingGroup.Key</strong></td>
                                            </tr>

                                            int subHeadingIndex = 1;
                                            @foreach (var subHeadingGroup in mainHeadingGroup.GroupBy(q => q.subheadingTitel))
                                            {
                                                <!-- Sub Heading -->
                                                <tr class="table-info">
                                                    <td colspan="6"><strong>@mainHeadingIndex.@subHeadingIndex. @subHeadingGroup.Key</strong></td>
                                                </tr>

                                                int questionIndex = 1;
                                                @foreach (var question in subHeadingGroup)
                                                {

                                            totalScore = question.TotalScore;
                                            brtotalScore = question.BrRTotalScore;
                                            reRTotalScore = question.ReRTotalScore;
                                                    <tr data-service-center-id="@question.ServiceCenterId">
                                                        <td>@mainHeadingIndex.@subHeadingIndex.@questionIndex</td>
                                                        <td>
                                                            @question.AnswerText
                                                            <input type="hidden" name="[@index].QuestionId" value="@question.QuestionId" />
                                                            <input type="hidden" name="[@index].QuestionText" value="@question.AnswerText" />
                                                            <input type="hidden" name="[@index].Marks" value="@question.Marks" />
                                                            <input type="hidden" name="[@index].MainHeading" value="@question.MainHeading" />
                                                            <input type="hidden" name="[@index].SubHeading" value="@question.SubHeading" />
                                                            <input type="hidden" name="[@index].ServiceCenterId" value="@question.ServiceCenterId" />
                                                        </td>
                                                        <td>@question.Marks</td>
                                                        <td>
                                                            <div class="col-md-2">
                                                                @{
                                                                string displayAnswers = question.ServiceCenterAnswer == "Yes" ? "Yes" :
                                                                question.ServiceCenterAnswer == "NO" ? "No" :
                                                                question.ServiceCenterAnswer == "NA" ? "N/A" : "";


                                                                    bool hideServiceCenterAnswer = question.ServiceCenterflag == 0;
                                                                }

                                                            <span class="answer-label @(question.ServiceCenterAnswer == "NO" || question.ServiceCenterAnswer == "NA" ? "clickable" : "")"
                                                                      data-comment="@question.Scomment"
                                                                      onclick="showComment(this)"
                                                                @(hideServiceCenterAnswer ? "style=display:none;" : "")>
                                                                    @displayAnswers
                                                                </span>

                                                                <input type="hidden" name="[@index].ServiceCenterAnswer" value="@question.ServiceCenterAnswer"
                                                                @(hideServiceCenterAnswer ? "style=display:none;" : "") />
                                                                <input type="hidden" name="[@index].Scomment" value="@question.Scomment" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-2">
                                                                @{
                                                                string displayAnswerb = question.BranchAnswer == "Yes" ? "Yes" :
                                                                question.BranchAnswer == "NO" ? "No" :
                                                                question.BranchAnswer == "NA" ? "N/A" : "";
                                                                }

                                                            <span class="answer-label @(question.BranchAnswer == "NO" || question.BranchAnswer == "NA" ? "clickable" : "")"
                                                                      data-comment="@question.Bcomment"
                                                                      onclick="showComment(this)">
                                                                    @displayAnswerb
                                                                </span>
                                                                <input type="hidden" name="[@index].BranchAnswer" value="@question.BranchAnswer" />
                                                                <input type="hidden" name="[@index].ServiceCenterAnswer" value="@question.ServiceCenterAnswer" />
                                                                <input type="hidden" name="[@index].Bcomment" value="@question.Bcomment" />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="col-md-2">
                                                                @{
                                                                string displayAnswerr = question.RegionAnswer == "Yes" ? "Yes" :
                                                                question.RegionAnswer == "NO" ? "No" :
                                                                question.RegionAnswer == "NA" ? "N/A" : "";
                                                                }

                                                            <span class="answer-label @(question.RegionAnswer == "NO" || question.RegionAnswer == "NA" ? "clickable" : "")"
                                                                      data-comment="@question.Rcomment"
                                                                      onclick="showComment(this)">
                                                                    @displayAnswerr
                                                                </span>
                                                                <input type="hidden" name="[@index].BranchAnswer" value="@question.BranchAnswer" />
                                                                <input type="hidden" name="[@index].RegionAnswer" value="@question.RegionAnswer" />
                                                                <input type="hidden" name="[@index].ServiceCenterAnswer" value="@question.ServiceCenterAnswer" />
                                                                <input type="hidden" name="[@index].Rcomment" value="@question.Scomment" />
                                                            </div>
                                                        </td>

                                                    </tr>

                                                    index++;
                                                    questionIndex++;
                                                }

                                                subHeadingIndex++;
                                            }

                                            mainHeadingIndex++;
                                        }
                                    </tbody>
                            <tfoot>
                                <tr class="table-warning">
                                    <td colspan="4" class="text-end"><strong>Service Center Total Score:</strong></td>
                                    <td><strong>@totalScore</strong></td>


                                </tr>
                                <tr class="table-warning">
                                    <td colspan="4" class="text-end"><strong>Branch Review Total Score:</strong></td>
                                    <td><strong>@brtotalScore</strong></td>


                                </tr>
                                <tr class="table-warning">
                                    <td colspan="4" class="text-end"><strong>Branch Review Total Score:</strong></td>
                                    <td><strong>@reRTotalScore</strong></td>


                                </tr>
                            </tfoot>
                                </table>
                            </div>
                        </form>
                    </div>
            </div>
        </div>
 </div>
          
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    document.querySelectorAll("[data-service-center-id]").forEach(row => {
                        let serviceCenterId = row.getAttribute("data-service-center-id");
                        let serviceCenterFlag = row.getAttribute("data-service-center-flag"); // Assuming you set this attribute in Razor

                        if (serviceCenterFlag === "0") {
                            row.querySelector(".answer-label").style.display = "none";
                            row.querySelector("input[name*='ServiceCenterAnswer']").style.display = "none";
                        }
                    });
                });

    function showComment(element) {
        let answer = element.innerText.trim(); // Get the displayed answer (Yes, No, NA)
        let comment = element.getAttribute("data-comment");

        if ((answer === "No" || answer === "N/A") && comment) {
            alert("Comment: " + comment);
        }
    }
                $(document).ready(function () {
                    $("#searchForm").submit(function (event) {
                        event.preventDefault(); // Prevent form from reloading the page

                        var serviceCenterId = $("#ServiceCenterId").val(); // Get input value
            var fromdate = $("#fromdate").val();

                        $.ajax({
                        url: "/Assessment/RegionOwnReport",
                            type: "GET",
                            data: { ServiceCenterId: serviceCenterId },
                            success: function (response) {
                                $("#resultTable").html(response); // Load response into the div
                            },
                            error: function () {
                                $("#resultTable").html("<p style='color: red;'>Error loading data.</p>");
                            }
                        });
                    });
                });
   
                document.addEventListener("DOMContentLoaded", function () {
                    const formKey = "savedAssessmentAnswers"; // Key for local storage

                    // Function to save data to Local Storage
                    function saveToLocalStorage() {
                        let answers = {};
                        document.querySelectorAll('input[type="radio"]:checked').forEach(radio => {
                            answers[radio.name] = {
                                value: radio.value,
                                className: radio.className
                            };
                        });
                        document.querySelectorAll('input[type="text"]').forEach(input => {
                            answers[input.name] = input.value;
                        });
                        localStorage.setItem(formKey, JSON.stringify(answers));
                    }


                    // Function to clear Local Storage when form is submitted
                    function clearLocalStorage() {
                        localStorage.removeItem(formKey);
                    }

                    // Attach event listener to all radio buttons
                    document.querySelectorAll('input[type="radio"]').forEach(radio => {
                        radio.addEventListener("change", saveToLocalStorage);
                    });

                    // Attach event listener to text input for comment
                    document.querySelectorAll('input[type="text"]').forEach(input => {
                        input.addEventListener("change", saveToLocalStorage);
                    });

                    // Attach event listener to form submission
                    document.querySelector("form").addEventListener("submit", function () {
                        clearLocalStorage();
                    });

                    // Load saved data from local storage when page loads
                    loadFromLocalStorage();

                    // Show comment field if negative or notapplicable is selected
                    document.querySelectorAll('input[type="radio"]').forEach(radio => {
                        radio.addEventListener('change', function () {
                            let parent = this.closest('tr');
                            let commentField = parent.querySelector('.comment-field');
                if (this.value === "NO" || this.value === "NA") {  // 0 = negative, 2 = not applicable
                                commentField.style.display = 'block';
                            } else {
                                commentField.style.display = 'none';
                                commentField.value = '';
                            }
                        });
                    });
                });

            </script>
<style>
    /* Styling for Both Forms */
    .form-container {
        background: #f8f9fa; /* Light background */
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 15px;
        width: fit-content;
        margin: 20px auto 20px 0;
    }

        /* Label Styling */
        .form-container label {
            font-size: 16px;
            font-weight: bold;
            color: #333;
        }

        /* Dropdown Styling */
        .form-container select {
            padding: 8px 12px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            outline: none;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
        }

            .form-container select:hover {
                border-color: #ddc541;
            }

        /* Button Styling */
        .form-container button {
            background: #ff0a0a;
            color: white;
            font-size: 14px;
            font-weight: bold;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
        }

            .form-container button:hover {
                background: #ddc541;
            }
            </style>